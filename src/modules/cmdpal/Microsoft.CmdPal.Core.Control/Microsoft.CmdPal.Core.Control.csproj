<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\..\CmdPalVersion.props" />
  <Import Project="..\..\..\Common.Dotnet.CsWinRT.props" />
  <Import Project="..\..\..\Common.Dotnet.AotCompatibility.props" />

  <PropertyGroup>
    <RootNamespace>Microsoft.CmdPal.Core.Control</RootNamespace>

    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <OutputPath>$(SolutionDir)$(Platform)\$(Configuration)\WinUI3Apps\CmdPal</OutputPath>
    <!-- For MVVM Toolkit Partial Properties/AOT support -->
    <LangVersion>preview</LangVersion>
    <!-- Disable SA1313 for Primary Constructor fields conflict https://learn.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/instance-constructors#primary-constructors  -->
    <NoWarn>SA1313;</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <CsWinRTAotOptimizerEnabled>true</CsWinRTAotOptimizerEnabled>
  </PropertyGroup>
	
  <PropertyGroup>
    <!-- This lets us actually reference types from Microsoft.Terminal.UI -->
    <CsWinRTIncludes>Microsoft.Terminal.UI;</CsWinRTIncludes>
    <CsWinRTGeneratedFilesDir>$(OutDir)</CsWinRTGeneratedFilesDir>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CommunityToolkit.WinUI.Controls.Primitives" />
    <PackageReference Include="CommunityToolkit.WinUI.Controls.SettingsControls" />
    <PackageReference Include="CommunityToolkit.WinUI.Converters" />
    <PackageReference Include="CommunityToolkit.WinUI.Animations" />
    <PackageReference Include="CommunityToolkit.WinUI.Extensions" />
    <PackageReference Include="CommunityToolkit.WinUI.UI.Controls.Markdown" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
    <PackageReference Include="Microsoft.WindowsAppSDK" />
    <PackageReference Include="Microsoft.Xaml.Behaviors.WinUI.Managed" />
	  <!-- <PackageReference Include="WinUIEx" /> -->
    <PackageReference Include="Microsoft.Windows.CsWin32">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <PackageReference Include="Microsoft.Extensions.Hosting" />

    <PackageReference Include="System.Net.Http" />
  </ItemGroup>

  <!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>

  <ItemGroup>
	<RdXmlFile Include="rd.xml" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.CmdPal.Common\Microsoft.CmdPal.Common.csproj" />
    <ProjectReference Include="..\Microsoft.CmdPal.Core.ViewModels\Microsoft.CmdPal.Core.ViewModels.csproj" />

    <ProjectReference Include="..\extensionsdk\Microsoft.CommandPalette.Extensions.Toolkit\Microsoft.CommandPalette.Extensions.Toolkit.csproj" />

    <ProjectReference Include="..\Microsoft.Terminal.UI\Microsoft.Terminal.UI.vcxproj">
      <ReferenceOutputAssembly>True</ReferenceOutputAssembly>
      <Private>True</Private>
      <CopyLocalSatelliteAssemblies>True</CopyLocalSatelliteAssemblies>
    </ProjectReference>

  </ItemGroup>

  <ItemGroup>
    <Page Update="LoadingPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="ShellPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Controls\SearchBar.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Styles\Button.xaml">
      <XamlRuntime>$(DefaultXamlRuntime)</XamlRuntime>
    </Page>
    <Page Update="Styles\TextBox.xaml">
      <XamlRuntime>$(DefaultXamlRuntime)</XamlRuntime>
    </Page>
    <Page Update="Styles\Colors.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Styles\Settings.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>

</Project>
